{"version":3,"file":"static/js/398.eb159c85.chunk.js","mappings":"uKAAO,MAAMA,EAA0B,CACnC,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,WAAYC,MAAO,aAGnBC,EAA+B,CACxC,CAAEF,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,WAAYC,MAAO,aAGnBE,EAAqB,CAC9B,CAAEH,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,QAASC,MAAO,UAIhBG,EAAgB,CACzB,CAAEJ,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,WAAYC,MAAO,aAGnBI,EAAc,CACvB,CAAEL,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,UAAWC,MAAO,YAIlBK,EAAqB,CAC9B,CAAEN,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,QAASC,MAAO,S,2HCnCNM,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qPAE7BC,EAAAA,GAAKC,IAKeC,IAAM,QAAS,CACrCC,MAAO,UACPC,KAAMC,EAAAA,GAAOD,OAIVE,EAAAA,GAAYC,QAbV,MAwBMC,EAAQZ,EAAAA,GAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iDAC3BC,EAAAA,GAAKC,KA+BIS,GAzBWd,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yLAS9BO,EAAAA,GAAYM,SASYhB,EAAAA,GAAOiB,GAAEC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uFAOXH,EAAAA,GAAOC,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,iJAUvBiB,EAAepB,EAAAA,GAAOC,IAAGoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,yU,kOC9DtC,MAMA,EAN2BmB,EAAAA,KAAaC,MAAM,IACvCC,EAAAA,EAAmBC,UACnBC,EAAAA,EAAWD,UACXE,EAAAA,EAA0BF,S,0BCSjC,MA0JA,EA1JsBG,IAAkC,IAAjC,cAAEC,EAAa,SAAEC,GAAUF,EAE9C,MAAM,OAAEG,IAAWC,EAAAA,EAAAA,GAAa,6CAA8C,WAyB9E,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACHL,cAAeA,EACfM,iBAAkBC,EAClBC,SA3BSC,MAAOC,EAAMC,KAAyB,IAAvB,cAAEC,GAAeD,EAE7CC,GAAc,GAGd,MAAM,KAAEC,EAAI,MAAEC,SAAgBC,EAAAA,EACzBC,KAAK,UACLC,OAAO,IACDP,IAENQ,GAAG,WAAYjB,GAGpB,GAAIa,EAEA,MADAK,QAAQC,IAAI,QAASN,GACfA,EAIVF,GAAc,GACdV,GAAQ,EAOemB,SAElBC,IAAA,IAAC,OAAEZ,EAAM,cAAEa,EAAa,OAAEC,GAAQF,EAAA,OAC/BlB,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAAAJ,UACDK,EAAAA,EAAAA,MAAC3C,EAAAA,GAAK,CAAAsC,SAAA,EACFjB,EAAAA,EAAAA,KAACb,EAAAA,GAAY,CAAA8B,SAAC,WACdjB,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,aACLC,KAAK,OACLhE,MAAM,WACNiE,UAAQ,EACRC,YAAY,qBAEhB3B,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,eACLC,KAAK,OACLhE,MAAM,eACNkE,YAAY,wBACZD,UAAQ,KAEZ1B,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,QACLC,KAAK,QACLhE,MAAM,QACNkE,YAAY,sBAEhB3B,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,UACL/D,MAAM,UACNmE,OAAO,WACPD,YAAY,wBAEhB3B,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,uBACLC,KAAK,OACLhE,MAAM,sBACNkE,YAAY,yBAEhB3B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAe,CACZL,KAAK,oBACLC,KAAK,OACLhE,MAAM,oBACNkE,YAAY,oBACZG,QAAS,IAAIC,KAAK,cAClBC,QAAS,IAAID,QAEjB/B,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,cACLC,KAAK,SACLhE,MAAM,cACNiE,UAAQ,EACRC,YAAY,iBAEhB3B,EAAAA,EAAAA,KAACb,EAAAA,GAAY,CAAA8B,SAAC,kBACdjB,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,cACLC,KAAK,SACLhE,MAAM,cACNkE,YAAY,iBAEhB3B,EAAAA,EAAAA,KAACiC,EAAAA,GAAiB,CACdT,KAAK,oBACL/D,MAAM,oBACNiE,UAAQ,EACRQ,QAAS3E,EAAAA,MAEbyC,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,mBACLC,KAAK,SACLhE,MAAM,mBACNiE,UAAQ,EACRC,YAAY,sBAEhB3B,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,uBACLC,KAAK,SACLhE,MAAM,uBACNiE,UAAQ,EACRC,YAAY,0BAEhB3B,EAAAA,EAAAA,KAACb,EAAAA,GAAY,CAAA8B,SAAC,UACdjB,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,kBACLC,KAAK,SACLhE,MAAM,kBACNiE,UAAQ,EACRC,YAAY,aACZQ,WAAW,uDAEfnC,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,qBACLC,KAAK,SACLhE,MAAM,qBACNiE,UAAQ,EACRC,YAAY,qBACZQ,WAAW,iCAEfnC,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,oBACLC,KAAK,SACLhE,MAAM,oBACNiE,UAAQ,EACRC,YAAY,gBACZQ,WAAW,yCAEfnC,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CACRC,KAAK,sBACLC,KAAK,SACLhE,MAAM,sBACNiE,UAAQ,EACRC,YAAY,yBAEhB3B,EAAAA,EAAAA,KAACnB,EAAAA,GAAU,CAAAoC,UACPjB,EAAAA,EAAAA,KAACoC,EAAAA,EAAG,CAACC,KAAK,SAASZ,KAAK,iBAG7B,GAEN,E,qCCpJjB,MA6CA,EA7CkBa,KACd,MAAO1C,EAAe2C,IAAoBC,EAAAA,EAAAA,UAAS,CAAC,IAC7CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GACjCG,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,KACtB,QAAEC,IAAYC,EAAAA,EAAAA,KA4BpB,OA1BAC,EAAAA,EAAAA,YAAU,KACkB3C,WACpB,IAEI,MAAQI,KAAMwC,EAAWvC,MAAOwC,SAAqBvC,EAAAA,EAASwC,IAAI,0BAA2B,CACzFC,cAAeN,EACfO,eAAgBV,EAAQ9C,WAG5B,GAAIqD,EACA,MAAMA,EAGVnC,QAAQC,IAAI,gBAAiBiC,GAE7BV,EAAiBU,EAAU,GAC/B,CAAE,MAAOvC,GACLK,QAAQL,MAAM,+BAAgCA,EAClD,CAAC,QACGgC,GAAW,EACf,GAGJY,EAAiB,GAClB,CAACR,EAASH,EAAQ9C,YAGjByB,EAAAA,EAAAA,MAACiC,EAAAA,EAAM,CAAC/B,KAAK,aAAYP,SAAA,EACrBjB,EAAAA,EAAAA,KAACwD,EAAAA,EAAY,CAACC,MAAM,iBACpBzD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAAAzC,SACNwB,IAAY7C,GACPI,EAAAA,EAAAA,KAAC2D,EAAAA,EAAa,KACd3D,EAAAA,EAAAA,KAAC4D,EAAa,CAAChE,cAAeA,EAAeC,SAAU8C,EAAQ9C,eAGpE,EC/CjB,EAVsBgE,KAEd7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAI,CAAA7C,UACDjB,EAAAA,EAAAA,KAAA,OAAAiB,UACIjB,EAAAA,EAAAA,KAACsC,EAAS,KADL,e,oCCNd,MAGMyB,EAAmB,U,4DCFhC,MAqBA,EArB2B1E,EAAAA,KAAaC,MAAM,CAC1C0E,WAAY3E,EAAAA,KACP4E,IAAI,GACJC,IAAI,KACJxC,SAAS,YACdyC,QAAS9E,EAAAA,KACJ4E,IAAI,GACJC,IAAI,KACJE,cACLC,aAAchF,EAAAA,KAAaiF,QAAQP,EAAAA,GAAkB,wBAAwBrC,SAAS,YACtF6C,MAAOlF,EAAAA,KAAakF,MAAM,iBAAiBC,YAAYC,OAAOL,cAC9DM,YAAarF,EAAAA,KACR4E,IAAI,GACJC,IAAI,KACJxC,SAAS,YACdiD,cAAetF,EAAAA,KACfuF,oBAAqBvF,EAAAA,KAAa+E,cAClCS,kBAAmBxF,EAAAA,KAAW+E,cAC9BU,eAAgBzF,EAAAA,KAAa4E,IAAI,GAAGG,e,0DCXxC,MAAMW,EAAqB1F,EAAAA,KAAaC,MAAM,CAC1C0F,kBAAmB3F,EAAAA,KAAa4F,MAAM,CAAC,QAAS,SAAU,UAAW,YAAa,YAAa,6BAA6BvD,SAAS,YACrIwD,YAAa7F,EAAAA,KAAa4E,IAAI,GAAGG,cAEjCe,uBAAwB9F,EAAAA,KAAa4F,MAAM,CAAC,UAAW,YAAa,YAAa,6BAA6BvD,SAAS,YAEvH0D,oBAAqB/F,EAAAA,KAAa4E,IAAI,GAAGvC,SAAS,YAElD2D,iBAAkBhG,EAAAA,KAAa4E,IAAI,GAAGC,IAAI,IAAIxC,SAAS,YACvD4D,qBAAsBjG,EAAAA,KAAa4E,IAAI,GAAGvC,SAAS,cAG1ChC,EAA4BL,EAAAA,KAAaC,MAAM,CACxD0F,kBAAmB3F,EAAAA,KAAa4F,MAAM,CAAC,QAAS,SAAU,UAAW,YAAa,YAAa,6BAA6Bb,cAC5Hc,YAAa7F,EAAAA,KAAa4E,IAAI,GAAGG,cAEjCe,uBAAwB9F,EAAAA,KAAa4F,MAAM,CAAC,UAAW,YAAa,YAAa,6BAA6Bb,cAE9GiB,iBAAkBhG,EAAAA,KAAa4E,IAAI,GAAGC,IAAI,IAAIE,cAC9CkB,qBAAsBjG,EAAAA,KAAa4E,IAAI,GAAGG,gBAI9C,G,iDC/BA,MAWA,EAXmB/E,EAAAA,KAAaC,MAAM,CAGlCiG,gBAAiBlG,EAAAA,KAAa4E,IAAI,GAAGvC,SAAS,YAC9C8D,mBAAoBnG,EAAAA,KAAaqC,SAAS,YAE1C+D,kBAAmBpG,EAAAA,KAAaqC,SAAS,YAEzCgE,oBAAqBrG,EAAAA,KAAaqC,SAAS,a","sources":["constants/options.js","forms/style.js","validation/editGroupValidation.js","forms/EditGroup/index.jsx","widgets/EditGroup/index.jsx","pages/group/EditGroupPage.jsx","utils/validation.js","validation/basicValidation.js","validation/contributionValidation.js","validation/loanValidation.js"],"sourcesContent":["export const meetingFrequencyOptions = [\n    { value: 'daily', label: 'Daily' },\n    { value: 'weekly', label: 'Weekly' },\n    { value: 'monthly', label: 'Monthly' },\n    { value: 'quarterly', label: 'Quarterly' },\n    { value: 'annually', label: 'Annually' },\n]\n\nexport const contributionFrequencyOptions = [\n    { value: 'weekly', label: 'Weekly' },\n    { value: 'monthly', label: 'Monthly' },\n    { value: 'quarterly', label: 'Quarterly' },\n    { value: 'annually', label: 'Annually' },\n]\n\nexport const accountTypeOptions = [\n    { value: 'savings', label: 'Savings' },\n    { value: 'current', label: 'Current' },\n    { value: 'joint', label: 'Joint' },\n]\n\n\nexport const memberOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'active', label: 'Active' },\n    { value: 'inactive', label: 'Inactive' },\n]\n\nexport const loanOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'approved', label: 'Approved' },\n    { value: 'pending', label: 'Pending' },\n]\n\n// payment Mode options\nexport const paymentModeOptions = [\n    { value: 'cash', label: 'Cash' },\n    { value: 'card', label: 'Card' },\n    { value: 'upi', label: 'UPI' },\n    { value: 'other', label: 'Other' },\n]\n","import styled from \"styled-components\";\nimport theme from 'styled-theming';\nimport { flex, breakpoints, colors } from '@styles/vars';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n  ${flex.col}\n  gap: 10px;\n\n  .divider {\n    height: 1px;\n    background-color: ${theme('theme', {\n  light: '#A2C0D4',\n  dark: colors.dark\n})};\n  }\n\n   ${breakpoints.tablet} {\n    flex-direction: row;\n    gap: 20px;\n\n    .divider {\n      height: auto;\n      width: 1px;\n    }\n  }\n`\n\nexport const Block = styled.div`\n  ${flex.col}\n  gap: 6px;\n  width: 100%;\n  \n`\n\nexport const RowBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n\n  & > * {\n    width: 100%;\n  }\n\n  ${breakpoints.mobileL} {\n    gap: 8px;\n\n    & > * {\n      width: 90%;\n    }\n  } \n`\n\nexport const ContentTitle = styled.h3`\n  display: flex;\n  align-items: center;\n  margin: 10px 0px;\n  gap: 18px;\n`\n\nexport const BtnWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 10px;\n\n  & > *:only-child {\n    grid-column: span 2;\n  }\n`;\n\nexport const LineWithText = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  margin: 10px 0;\n  &::before, &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 2px dotted lightgray;\n  }\n  &:not(:empty)::before {\n    margin-right: 0.25em;\n  }\n  &:not(:empty)::after {\n    margin-left: 0.25em;\n  }\n`;","import * as Yup from \"yup\";\n\nimport basicDetailsSchema from \"./basicValidation\";\nimport loanSchema from \"./loanValidation\";\nimport { updateContributionsSchema } from \"./contributionValidation\";\n\n\n// Combine all the schemas\nconst groupSettingSchema = Yup.object().shape({\n    ...basicDetailsSchema.fields,\n    ...loanSchema.fields,\n    ...updateContributionsSchema.fields,\n});\n\nexport default groupSettingSchema;","// form\nimport { Formik, Form } from 'formik'\nimport { FormikField, FormikSelectField, FormikDateField } from '@ui/FormikField'\n\n// ui\nimport Btn from '@ui/Btn'\n\n\n// style\nimport { Block, LineWithText, BtnWrapper } from '../style'\n\n// options\nimport { meetingFrequencyOptions } from '@constants/options';\nimport useNotistack from '@hooks/useNotistack';\nimport groupSettingSchema from '@validation/editGroupValidation';\n\n// supabase\nimport supabase from '@client/client';\n\n\nconst EditGroupForm = ({ initialValues, group_id }) => {\n\n    const { notify } = useNotistack('Your changes have been successfully saved.', 'success');\n\n    const onSubmit = async (values, { setSubmitting }) => {\n\n        setSubmitting(true);\n\n        // Call the stored procedure\n        const { data, error } = await supabase\n            .from('groups')\n            .update({\n                ...values\n            })\n            .eq('group_id', group_id);\n\n\n        if (error) {\n            console.log('error', error);\n            throw error;\n        }\n\n        // set submitting to false\n        setSubmitting(false);\n        notify();\n    }\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={groupSettingSchema}\n            onSubmit={onSubmit}\n        >\n            {({ values, setFieldValue, errors }) => (\n                <Form>\n                    <Block>\n                        <LineWithText>Basic</LineWithText>\n                        <FormikField\n                            name=\"group_name\"\n                            type=\"text\"\n                            label=\"SHG Name\"\n                            required\n                            placeholder=\"Name of the SHG\"\n                        />\n                        <FormikField\n                            name=\"phone_number\"\n                            type=\"text\"\n                            label=\"Phone Number\"\n                            placeholder=\"10 digit phone number\"\n                            required\n                        />\n                        <FormikField\n                            name=\"email\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"Email of the SHG\"\n                        />\n                        <FormikField\n                            name=\"address\"\n                            label=\"Address\"\n                            asType='textarea'\n                            placeholder=\"Address of the SHG\"\n                        />\n                        <FormikField\n                            name=\"registration_numberr\"\n                            type=\"text\"\n                            label=\"Registration Number\"\n                            placeholder=\"Registration Number\"\n                        />\n                        <FormikDateField\n                            name=\"registration_date\"\n                            type=\"date\"\n                            label=\"Registration Date\"\n                            placeholder=\"Registration Date\"\n                            minDate={new Date('01/01/2000')}\n                            maxDate={new Date()}\n                        />\n                        <FormikField\n                            name=\"max_members\"\n                            type=\"number\"\n                            label=\"Max Members\"\n                            required\n                            placeholder=\"Max Members\"\n                        />\n                        <LineWithText>Contribution</LineWithText>\n                        <FormikField\n                            name=\"joining_fee\"\n                            type=\"number\"\n                            label=\"Joining Fee\"\n                            placeholder=\"Joining Fee\"\n                        />\n                        <FormikSelectField\n                            name=\"meeting_frequency\"\n                            label=\"Meeting Frequency\"\n                            required\n                            options={meetingFrequencyOptions}\n                        />\n                        <FormikField\n                            name=\"contribution_day\"\n                            type=\"number\"\n                            label=\"Contribution Day\"\n                            required\n                            placeholder=\"Contribution Day\"\n                        />\n                        <FormikField\n                            name=\"contribution_penalty\"\n                            type=\"number\"\n                            label=\"Contribution Penalty\"\n                            required\n                            placeholder=\"Contribution Penalty\"\n                        />\n                        <LineWithText>Loan</LineWithText>\n                        <FormikField\n                            name=\"max_loan_amount\"\n                            type=\"number\"\n                            label=\"Max Loan Amount\"\n                            required\n                            placeholder=\"Loan Limit\"\n                            helperText='Maximum loan amount that can be given to a member'\n                        />\n                        <FormikField\n                            name=\"loan_interest_rate\"\n                            type=\"number\"\n                            label=\"Loan Interest Rate\"\n                            required\n                            placeholder=\"Loan Interest Rate\"\n                            helperText='Interest rate in percentage'\n                        />\n                        <FormikField\n                            name=\"max_loan_duration\"\n                            type=\"number\"\n                            label=\"Max Loan Duration\"\n                            required\n                            placeholder=\"Loan Duration\"\n                            helperText='Maximum duration for loan repayment'\n                        />\n                        <FormikField\n                            name=\"installment_penalty\"\n                            type=\"number\"\n                            label=\"Installment Penalty\"\n                            required\n                            placeholder=\"Installment Penalty\"\n                        />\n                        <BtnWrapper>\n                            <Btn text='Update' type='submit' />\n                        </BtnWrapper>\n                    </Block>\n                </Form>\n            )}\n        </Formik>\n\n    )\n}\n\nexport default EditGroupForm","import { useEffect, useState } from 'react';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport WidgetsLoader from '@components/WidgetsLoader';\n\n// forms\nimport EditGroupForm from '@forms/EditGroup';\n\n// supabase\nimport supabase from '@client/client';\n\n// store\nimport { useSelector } from 'react-redux';\nimport { selectMyGroup } from '@store/slices/myGroupSlice';\n\n// hook\nimport useAuth from '@hooks/useAuth';\n\nconst EditGroup = () => {\n    const [initialValues, setInitialValues] = useState({});\n    const [loading, setLoading] = useState(true);\n    const myGroup = useSelector(selectMyGroup);\n    const { user_id } = useAuth();\n\n    useEffect(() => {\n        const fetchSHGSetting = async () => {\n            try {\n                // Call the stored procedure\n                const { data: groupData, error: groupError } = await supabase.rpc('fetch_update_group_info', {\n                    user_id_input: user_id,\n                    group_id_input: myGroup.group_id\n                });\n\n                if (groupError) {\n                    throw groupError;\n                }\n\n                console.log('SHG settings:', groupData);\n\n                setInitialValues(groupData[0]);\n            } catch (error) {\n                console.error('Error fetching SHG settings:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchSHGSetting();\n    }, [user_id, myGroup.group_id]);\n\n    return (\n        <Widget name=\"SHGSetting\">\n            <WidgetHeader title=\"SHG Setting\" />\n            <WidgetBody>\n                {loading || !initialValues\n                    ? <WidgetsLoader />\n                    : <EditGroupForm initialValues={initialValues} group_id={myGroup.group_id} />\n                }\n            </WidgetBody>\n        </Widget>\n    );\n};\n\nexport default EditGroup;\n","// components\nimport Page from '@layout/Page';\n\nimport EditGroup from '@widgets/EditGroup';\n\nconst EditGroupPage = () => {\n    return (\n        <Page>\n            <div key=\"group_edit\">\n                <EditGroup />\n            </div>\n        </Page>\n    )\n}\n\nexport default EditGroupPage;","\n\nexport const objectIdRegex = /^[0-9a-fA-F]{24}$/;\n\n// 10 digit phone number\nexport const phoneNumberRegex = /^\\d{10}$/;\n\n// contact number\nexport const landlineNumberRegex = /^\\+?\\d{10,15}$/; // Adjust the length range based on your requirements\n\n// Regex pattern to match the string format \"hh:mm-hh:mm\"\nexport const timeSlotPattern = /^([01]?[0-9]|2[0-3]):[0-5][0-9]-([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n\nexport const isoDatePattern = /^\\d{4}-\\d{2}-\\d{2}$/;","import * as Yup from 'yup';\nimport { phoneNumberRegex } from '@utils/validation';\n\nconst basicDetailsSchema = Yup.object().shape({\n    group_name: Yup.string()\n        .min(1)\n        .max(255)\n        .required('required'),\n    address: Yup.string()\n        .min(2)\n        .max(200)\n        .notRequired(),\n    phone_number: Yup.string().matches(phoneNumberRegex, 'Invalid phone number').required('required'),\n    email: Yup.string().email('Invalid email').lowercase().trim().notRequired(),\n    max_members: Yup.number()\n        .min(1)\n        .max(100)\n        .required('required'),\n    is_registered: Yup.boolean(),\n    registration_number: Yup.string().notRequired(),\n    registration_date: Yup.date().notRequired(),\n    lock_in_period: Yup.number().min(0).notRequired(),\n});\n\nexport default basicDetailsSchema;\n\n","import * as Yup from 'yup';\n\n// -- contribution details\n// joining_fee NUMERIC CHECK (joining_fee >= 0), -- Joining fee for new members\n// meeting_frequency VARCHAR CHECK (meeting_frequency IN ('daily', 'weekly', 'monthly', 'quarterly')),\n// contribution_frequency VARCHAR CHECK (contribution_frequency IN ('monthly', 'quarterly')), -- Contribution frequency\n// contribution_amount NUMERIC CHECK (contribution_amount >= 0), -- Contribution amount\n// contribution_day INTEGER CHECK (contribution_day >= 1 AND contribution_day <= 30), -- contribution day based on contribution_frequency (1-30)\n// contribution_penalty NUMERIC CHECK (contribution_penalty >= 0), -- Penalty for late contributions\n\nconst contributionSchema = Yup.object().shape({\n    meeting_frequency: Yup.string().oneOf(['daily', 'weekly', 'monthly', 'quarterly', 'annually'], 'Invalid meeting frequency').required('required'),\n    joining_fee: Yup.number().min(0).notRequired(),\n\n    contribution_frequency: Yup.string().oneOf(['monthly', 'quarterly', 'annually'], 'Invalid meeting frequency').required('required'),\n    // contribution amount should be greater than 0\n    contribution_amount: Yup.number().min(1).required('required'),\n    // contribution late fee rate in percentage\n    contribution_day: Yup.number().min(1).max(30).required('required'),\n    contribution_penalty: Yup.number().min(0).required('required'),\n});\n\nexport const updateContributionsSchema = Yup.object().shape({\n    meeting_frequency: Yup.string().oneOf(['daily', 'weekly', 'monthly', 'quarterly', 'annually'], 'Invalid meeting frequency').notRequired(),\n    joining_fee: Yup.number().min(0).notRequired(),\n\n    contribution_frequency: Yup.string().oneOf(['monthly', 'quarterly', 'annually'], 'Invalid meeting frequency').notRequired(),\n    // contribution late fee rate in percentage\n    contribution_day: Yup.number().min(1).max(30).notRequired(),\n    contribution_penalty: Yup.number().min(0).notRequired(),\n});\n\n\nexport default contributionSchema;","import * as Yup from 'yup';\n\nconst loanSchema = Yup.object().shape({\n\n    // loan limit in rupees. greater than 0\n    max_loan_amount: Yup.number().min(1).required('required'),\n    loan_interest_rate: Yup.number().required('required'),\n    // loan duration in months\n    max_loan_duration: Yup.number().required('required'),\n    // installment late fee rate in percentage\n    installment_penalty: Yup.number().required('required'),\n});\n\nexport default loanSchema;\n\n"],"names":["meetingFrequencyOptions","value","label","contributionFrequencyOptions","accountTypeOptions","memberOptions","loanOptions","paymentModeOptions","styled","div","_templateObject","_taggedTemplateLiteral","flex","col","theme","light","dark","colors","breakpoints","tablet","Block","_templateObject2","BtnWrapper","_templateObject3","mobileL","h3","_templateObject4","_templateObject5","LineWithText","_templateObject6","Yup","shape","basicDetailsSchema","fields","loanSchema","updateContributionsSchema","_ref","initialValues","group_id","notify","useNotistack","_jsx","Formik","validationSchema","groupSettingSchema","onSubmit","async","values","_ref2","setSubmitting","data","error","supabase","from","update","eq","console","log","children","_ref3","setFieldValue","errors","Form","_jsxs","FormikField","name","type","required","placeholder","asType","FormikDateField","minDate","Date","maxDate","FormikSelectField","options","helperText","Btn","text","EditGroup","setInitialValues","useState","loading","setLoading","myGroup","useSelector","selectMyGroup","user_id","useAuth","useEffect","groupData","groupError","rpc","user_id_input","group_id_input","fetchSHGSetting","Widget","WidgetHeader","title","WidgetBody","WidgetsLoader","EditGroupForm","EditGroupPage","Page","phoneNumberRegex","group_name","min","max","address","notRequired","phone_number","matches","email","lowercase","trim","max_members","is_registered","registration_number","registration_date","lock_in_period","contributionSchema","meeting_frequency","oneOf","joining_fee","contribution_frequency","contribution_amount","contribution_day","contribution_penalty","max_loan_amount","loan_interest_rate","max_loan_duration","installment_penalty"],"sourceRoot":""}