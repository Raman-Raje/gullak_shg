{"version":3,"file":"static/js/506.d1db13eb.chunk.js","mappings":"8LASA,MAAMA,EAASC,EAAAA,GAAOC,OAAMC,WAAA,CAAAC,YAAA,gBAAbH,CAAa,qaAENI,GAASA,EAAMC,YAAcD,EAAMC,YAAcC,EAAAA,GAAOC,MAE/DC,EAAAA,GAAU,IACRC,EAAAA,GAAMC,QACXN,GAASA,EAAMO,OAASP,EAAMO,OAAS,SACxCP,GAASA,EAAMQ,MAAQR,EAAMQ,MAAQ,QAE5CC,EAAAA,GAAKC,QAOeC,EAAAA,EAAAA,IAAO,GAAKT,EAAAA,GAAOC,MAInBD,EAAAA,GAAOU,SAGLD,EAAAA,EAAAA,IAAO,GAAKT,EAAAA,GAAOU,SAKrBV,EAAAA,GAAOW,OAGLF,EAAAA,EAAAA,IAAO,GAAKT,EAAAA,GAAOW,OAKrBX,EAAAA,GAAOY,YAsC/B,EAjCYC,IAAyG,IAAxG,KAAEC,EAAI,QAAEC,EAAO,KAAEC,EAAO,SAAQ,UAAEC,GAAY,EAAI,UAAEC,EAAS,KAAEC,EAAI,OAAEd,EAAM,MAAGC,EAAK,YAAEP,GAAac,EAC7G,OACEO,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAAAC,SAEZL,IACEM,EAAAA,EAAAA,MAAC9B,EAAM,CAAC+B,GAAIC,EAAAA,EAAO9B,OACjBuB,UAAWA,GAAwB,GACnCQ,QAASX,EACTC,KAAMA,EACNW,SAAS,EACTtB,OAAQA,EACRC,MAAOA,EACPP,YAAaA,EACb6B,QAAS,CAAEC,QAAS,GACpBC,KAAM,CAAED,QAAS,GACjBE,WAAY,CAAEC,SAAU,IAAKV,SAAA,CAC5BH,IAAQC,EAAAA,EAAAA,KAAA,KAAGF,UAAS,aAAAe,OAAed,KAAW,IAAEL,MAIvC,C,mHCpEDoB,EAAAA,EAAAA,IAAS,6UAwBVA,EAAAA,EAAAA,IAAS,0FAcVA,EAAAA,EAAAA,IAAS,+FAtCrB,MAkDMC,GAASD,EAAAA,EAAAA,IAAS,uFAWRA,EAAAA,EAAAA,IAAS,uF,cCzDhC,MAAME,EAAUC,IAAM,QAAS,CAC3BC,MAAOA,EAAAA,GAAMC,UACbC,KAAMA,EAAAA,GAAKD,YAGTE,EAAaJ,IAAM,QAAS,CAC9BC,MAAOA,EAAAA,GAAMxB,KACb0B,KAAMA,EAAAA,GAAK1B,OAGT4B,GAAmBhD,EAAAA,EAAAA,IAAOiD,EAAAA,IAAO/C,WAAA,CAAAC,YAAA,gBAAdH,CAAc,+1BAMb0C,EAEPlC,EAAAA,GAAU,IASGF,EAAAA,GAAOC,KAIjBoC,IAAM,QAAS,CAC3BC,MAAM,oBACNE,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,QAMnBH,IAAM,QAAS,CACtBC,MAAO,UACPE,KAAMxC,EAAAA,GAAO4C,OAEF1C,EAAAA,GAAU,IAIIkC,EAClBC,IAAM,QAAS,CACtBC,MAAO,OACPE,KAAM,SAKGH,IAAM,QAAS,CACtBC,MAAO,OACPE,KAAM,SASHC,EACWL,EAEPD,EAuBFnC,EAAAA,GAAOC,KAKToC,IAAM,QAAS,CACtBC,MAAOA,EAAAA,GAAMxB,KACb0B,KAAMA,EAAAA,GAAK1B,QAMN+B,GAAQnD,EAAAA,EAAAA,IAAOgD,GAAiB9C,WAAA,CAAAC,YAAA,gBAAxBH,CAAwB,oHAG1BQ,EAAAA,GAAU,KACbJ,GAASA,EAAMgD,QAAU,cAAgB,QAI1CL,GASFM,GAAUrD,EAAAA,EAAAA,IAAOgD,GAAiB9C,WAAA,CAAAC,YAAA,gBAAxBH,CAAwB,4RAM1BS,EAAAA,GAAMC,OAIRF,EAAAA,GAAU,IAYzB8C,EAAAA,GAAYC,OAEG/C,EAAAA,GAAU,KAKhBgD,GAAOxD,EAAAA,EAAAA,IAAOgD,GAAiB9C,WAAA,CAAAC,YAAA,gBAAxBH,CAAwB,2Q,0BCnJ5C,MAsDayD,EAAeC,IAAiF,IAAhF,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,QAAEC,EAAO,YAAEC,EAAW,QAAEX,EAAO,QAAE/B,KAAYjB,GAAOsD,EAGnG,MAAOM,IAAYC,EAAAA,EAAAA,WACf,IAAM,UAAYC,KAAKC,SAASC,QAAQ,GAAGC,MAAM,KAqB/CC,EAAc,CAChBC,gBAAiB,SACjBC,QAASZ,EAAMa,KACfC,aAA0B,SAAZZ,EACdD,QAASA,EACTT,QAASA,EACTuB,WAAYvE,EAAMuE,WAClBC,MAzBiBC,MAEjB,MAAMD,EAAQhB,EAAMgB,MAEpB,OAAIxB,EACOS,EAAUA,EAAQiB,QAAOC,GAAUH,EAAMI,SAASD,EAAOH,SAAU,GAEnEf,EAAUA,EAAQoB,MAAKF,GAAUA,EAAOH,QAAUA,IAAS,EACtE,EAiBOC,GACPK,SAAWH,IAEP,MAAMH,EAAQxB,EAAW2B,EAASA,EAAOI,KAAIC,GAAQA,EAAKR,QAAS,GAAOG,EAASA,EAAOH,MAAQ,GAClGjB,EAAK0B,cAAczB,EAAMa,KAAMG,GAE3BvD,GACAA,EAAQ0D,EACZ,EAEJhB,YAAaA,EACbuB,iBAAiB,EACjBC,WAAY,CACRC,QA3BQC,IAAA,IAAC,SAAE7D,KAAaxB,GAAOqF,EAAA,OACnC5D,EAAAA,EAAAA,MAAC0D,EAAAA,EAAWC,QAAO,IAAKpF,EAAKwB,SAAA,CACxBA,GACDF,EAAAA,EAAAA,KAAA,KAAGF,UAAS,aAAAe,OAA2B,YAAZuB,EAAwB,QAAU,UAAS,aACrD,EAwBjB4B,KAAOtF,IAAUsB,EAAAA,EAAAA,KAAC6D,EAAAA,EAAWG,KAAI,IAAKtF,EAAOoB,UAAU,OAAMI,SACxDxB,EAAMwB,YAGf+D,GAAI3B,EACJ4B,mBAAmB,EACnBpE,UAAU,UAADe,OAAYuB,IAGzB,OAAQA,GACJ,QACA,IAAK,QACD,OAAOpC,EAAAA,EAAAA,KAACyB,EAAK,CAACC,QAASA,KAAakB,IAExC,IAAK,UACD,OAAO5C,EAAAA,EAAAA,KAAC2B,EAAO,CAACD,QAASA,KAAakB,IAE1C,IAAK,OACD,OAAO5C,EAAAA,EAAAA,KAAC8B,EAAI,CAACJ,QAASA,KAAakB,IAE3C,EC9HSuB,EAAmB7F,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,eAAVH,CAAU,0QAmB7B2C,IAAM,QAAS,CACtBC,MAAO,UACPE,KAAMxC,EAAAA,GAAO4C,OAKJ5C,EAAAA,GAAOC,MCtBTwF,EAAQ/F,EAAAA,GAAOgG,MAAK9F,WAAA,CAAAC,YAAA,gBAAZH,CAAY,+PAKlBQ,EAAAA,GAAU,IACrBmC,IAAM,QAAS,CACfC,MAAM,2BAADL,OACeK,EAAAA,GAAMC,UAAS,UAEnCC,KAAK,2BAADP,OACgBO,EAAAA,GAAKD,UAAS,YAMlBvC,EAAAA,GAAOW,MAIT0B,IAAM,QAAS,CAC3BC,MAAM,oBACNE,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,QAKJxC,EAAAA,GAAOC,M,qCCxBnC,MAsDA,EAtDkBY,IAAyE,IAAxE,KAAEwC,EAAI,MAAEC,EAAK,GAAE+B,EAAE,QAAEM,EAAO,QAAEC,EAAO,SAAEC,EAAQ,QAAE9E,KAAYjB,GAAOe,EACjF,MAAOyD,EAAOwB,IAAYnC,EAAAA,EAAAA,UAASL,EAAMgB,OAAS,OAC3CyB,EAAMC,IAAWrC,EAAAA,EAAAA,WAAS,GAC3BsC,GAAiBC,EAAAA,EAAAA,QAAO,MACxBC,GAAYD,EAAAA,EAAAA,QAAO,MAYzB,OACI9E,EAAAA,EAAAA,KAACgF,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAchF,UAC7CF,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CACPR,KAAMA,EACNzB,MAAOA,EACPqB,QAASA,EAAU,IAAIa,KAAKb,QAAWc,EACvCb,QAASA,EAAU,IAAIY,KAAKZ,QAAWa,EACvC7B,SAjBU8B,IAClBZ,EAASY,GACT,MAAMC,EAAUD,EAAWA,EAASE,OAAO,cAAgB,KAC3DvD,EAAK0B,cAAczB,EAAMa,KAAMwC,GAE3B5F,GACAA,EAAQ4F,EACZ,EAWQd,SAAUA,EACVgB,QAASA,IAAMb,GAAQ,GACvBc,YAAa,CAAEC,SAAUd,EAAee,SACxCC,WAAY,CAAE/F,UAAW,eACzBgG,YAAaC,IAAA,IAAC,IACVC,EAAG,WACHC,EAAU,SACVxB,EAAQ,SACRjB,EAAQ,MACRN,GACH6C,EAAA,OACG5F,EAAAA,EAAAA,MAACgE,EAAgB,CAAC6B,IAAKA,EAAI9F,SAAA,EACvBF,EAAAA,EAAAA,KAACqE,EAAK,CACFJ,GAAIA,EACJf,MAAOA,GAASA,EAAMsC,OAAO,cAC7BhC,SAAUA,EACViB,SAAUA,EACVuB,IAAKnB,EACLxC,YAAY,gBACR4D,EACJ3F,QAASA,IAAMsE,GAAQ,MAE3B5E,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAqBkG,IAAKjB,EAAWzE,QAASA,IAAMsE,GAAQ,OAC1D,KAGR,E,kDCxD/B,MAAMsB,EAASjF,IAAM,QAAS,CAC5BC,MAAM,aAADL,OAAejC,EAAAA,GAAOY,WAAU,eACrC4B,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,KAAI,iBAG1BJ,EAAUC,IAAM,QAAS,CAC7BC,MAAOA,EAAAA,GAAMC,UACbC,KAAMA,EAAAA,GAAKD,YAGPE,EAAaJ,IAAM,QAAS,CAChCC,MAAOA,EAAAA,GAAMxB,KACb0B,KAAMA,EAAAA,GAAK1B,OAGP4B,GAAmBhD,EAAAA,EAAAA,IAAOiD,EAAAA,GAAPjD,CAAc6H,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2wCAMbpF,EAEPlC,EAAAA,GAAU,IASGF,EAAAA,GAAOC,KAIjBoC,IAAM,QAAS,CAC3BC,MAAM,oBACNE,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,QAMnBH,IAAM,QAAS,CACtBC,MAAO,UACPE,KAAMxC,EAAAA,GAAO4C,OAEF1C,EAAAA,GAAU,IAOhBuC,EACWL,EAEPD,EAuBFnC,EAAAA,GAAOC,KAKToC,IAAM,QAAS,CACtBC,MAAOA,EAAAA,GAAMxB,KACb0B,KAAMA,EAAAA,GAAK1B,QAgBN2G,GAVkB/H,EAAAA,GAAO8F,IAAGkC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gHACrCjH,EAAAA,GAAKoH,IAKKL,GAIS5H,EAAAA,GAAO8F,IAAGoC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iBAC7BjH,EAAAA,GAAKoH,MAGIE,EAAQnI,EAAAA,GAAOoI,MAAKC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0EAClBtH,EAAAA,GAAU,KAKZ8H,EAAYtI,EAAAA,GAAOuI,KAAIC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8FACnBtH,EAAAA,GAAU,IAGdF,EAAAA,GAAOW,OAGPwH,EAAazI,EAAAA,GAAOuI,KAAIG,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,8FACpBtH,EAAAA,GAAU,IAGdF,EAAAA,GAAOc,KAAKuH,WAGZ5C,EAAQ/F,EAAAA,GAAOgG,MAAK4C,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,0aAKlBtH,EAAAA,GAAU,IACrBmC,IAAM,QAAS,CACjBC,MAAM,2BAADL,OACiBK,EAAAA,GAAMC,UAAS,UAErCC,KAAK,2BAADP,OACkBO,EAAAA,GAAKD,UAAS,YAMlBvC,EAAAA,GAAOW,MAIT0B,IAAM,QAAS,CAC/BC,MAAM,oBACNE,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,QAKAxC,EAAAA,GAAOC,KAI7BoC,IAAM,QAAS,CACfC,MAAM,sCAADL,OACwBK,EAAAA,GAAMC,UAAS,sDAE5CC,KAAK,sCAADP,OACyBO,EAAAA,GAAKD,UAAS,wDAGpCF,IAAM,QAAS,CACtBC,MAAO,OACPE,KAAM,UAwCC+F,GAlCe7I,EAAAA,GAAO8I,OAAMC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,qaAK1BtH,EAAAA,GAAU,IACrBmC,IAAM,QAAS,CACfC,MAAM,6BAADL,OACiBK,EAAAA,GAAMC,UAAS,WAErCC,KAAK,6BAADP,OACkBO,EAAAA,GAAKD,UAAS,aAMpBvC,EAAAA,GAAOW,MAIT0B,IAAM,QAAS,CAC3BC,MAAM,oBACNE,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,QAKJxC,EAAAA,GAAOC,MAMXP,EAAAA,GAAOgJ,SAAQC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,4bAKxBtH,EAAAA,GAAU,IACrBmC,IAAM,QAAS,CACfC,MAAM,6BAADL,OACiBK,EAAAA,GAAMC,UAAS,WAErCC,KAAK,6BAADP,OACkBO,EAAAA,GAAKD,UAAS,aAMpBvC,EAAAA,GAAOW,MAIT0B,IAAM,QAAS,CAC3BC,MAAM,oBACNE,KAAK,aAADP,OAAejC,EAAAA,GAAOwC,QAKJxC,EAAAA,GAAOC,QAMdP,EAAAA,EAAAA,IAAOgD,EAAPhD,CAAwBkJ,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,4LAG1BtH,EAAAA,GAAU,IAIduC,IASQ/C,EAAAA,EAAAA,IAAOgD,EAAPhD,CAAwBmJ,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,sdAM1BrH,EAAAA,GAAMC,OAIRF,EAAAA,GAAU,IAYzB8C,EAAAA,GAAYC,OAEG/C,EAAAA,GAAU,MAKTR,EAAAA,EAAAA,IAAOgD,EAAPhD,CAAwBoJ,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,6c,iEChS5C,MA4DA,GA5DuB3G,IAA0B,IAAzB,MAAEyC,EAAK,KAAED,EAAI,GAAEgC,GAAIxE,EACzC,MAAOkI,EAAWC,IAAgBrF,EAAAA,EAAAA,UAAS,CAAC,KAAM,QAC3CsF,EAAWC,GAAWH,GAG7BI,EAAAA,EAAAA,YAAU,KACJ7F,EAAMgB,OACR0E,EAAa,CAAC1F,EAAMgB,MAAM2E,UAAW3F,EAAMgB,MAAM4E,SACnD,GACC,CAAC5F,EAAMgB,QAwBV,OACIlD,EAAAA,EAAAA,KAACmF,IAAU,CACTlB,GAAIA,EACJ+D,cAAc,EACdH,UAAWA,EACXC,QAASA,EACTtE,SAAWyE,IACLC,MAAMC,QAAQF,IAAWA,EAAOG,OAAMC,GAAiB,OAATA,KAChDT,EAAa,CAAC,KAAM,OACpB3F,EAAK0B,cAAczB,EAAMa,KAAM,QAE/B6E,EAAaK,GACbhG,EAAK0B,cAAczB,EAAMa,KAAM,CAAE8E,UAAWI,EAAO,GAAIH,QAASG,EAAO,GAAIrH,SAAU,KACvF,EAGF0H,gBAAgB,gBAChBC,gBAvCwBC,KAC5B,IAAI5H,EAAW,GACf,GAAIiH,GAAaC,EACf,IAAIW,EAAAA,EAAAA,SAAQZ,EAAWC,GACrBlH,EAAW,YACN,CACL,MAAM8H,GAAaC,EAAAA,EAAAA,GAAiBb,EAASD,GAC7C,GAAIa,EAAa,GAAI,CACnB,MAAME,GAAeC,EAAAA,EAAAA,GAAmBf,EAASD,GACjDjH,EAAQ,GAAAC,OAAM+H,EAAe,EAAC,UAChC,MACEhI,EAAQ,GAAAC,OAAM6H,EAAa,EAAC,QAEhC,CAGFzG,EAAK0B,cAAczB,EAAMa,KAAM,CAAE8E,YAAWC,UAASlH,YAAW,EAwB5DkI,aAAa,EACbC,aAAa/I,EAAAA,EAAAA,KAACqE,EAAK,CACjBhC,YAAY,gBACZ2G,MAAO,CAAC9J,MAAO,WAEjB,E,gBCnDR,MA8DA,GA9DkBO,IAA0E,IAAzE,KAAEwC,EAAI,MAAEC,EAAK,GAAE+B,EAAE,SAAEQ,EAAQ,QAAE9E,EAAO,aAAEsJ,EAAe,MAAOvK,GAAOe,EAClF,MAAOyD,EAAOwB,IAAYnC,EAAAA,EAAAA,UAASL,EAAMgB,OAAS,OAC3CyB,EAAMC,IAAWrC,EAAAA,EAAAA,WAAS,GAC3BsC,GAAiBC,EAAAA,EAAAA,QAAO,MACxBC,GAAYD,EAAAA,EAAAA,QAAO,MAoBzB,OACI9E,EAAAA,EAAAA,KAACgF,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAchF,UAC7CF,EAAAA,EAAAA,KAACkJ,GAAAA,EAAU,CACPvE,KAAMA,EACNzB,MAAOA,EACPM,SAvBU8B,IAIlB,GAHAZ,EAASY,GACTrD,EAAK0B,cAAczB,EAAMa,KAAMuC,GAE3B3F,EAAS,CACT,MAAMwJ,EAAU7D,EAAWA,EAASE,OAAO,SAAW,KACtD7F,EAAQwJ,EACZ,GAiBQ1E,SAAUA,EACVgB,QAASA,IAAMb,GAAQ,GACvBwE,kBAhBcA,CAACC,EAAWC,IAChB,YAAdA,GAEOD,EAAYJ,IAAiB,EAchCvD,YAAa,CAAEC,SAAUd,EAAee,SACxCC,WAAY,CAAE/F,UAAW,eACzBgG,YAAaC,IAAA,IAAC,IACVC,EAAG,WACHC,EAAU,SACVxB,EAAQ,SACRjB,EAAQ,MACRN,GACH6C,EAAA,OACG5F,EAAAA,EAAAA,MAACgE,EAAgB,CAAC6B,IAAKA,EAAI9F,SAAA,EACvBF,EAAAA,EAAAA,KAACqE,EAAK,CACFJ,GAAIA,EACJf,MAAOA,GAASA,EAAMsC,OAAO,SAC7BhC,SAAUA,EACViB,SAAUA,EACVuB,IAAKnB,EACLxC,YAAY,WACR4D,EACJ3F,QAASA,IAAMsE,GAAQ,MAG3B5E,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAkBkG,IAAKjB,EAAWzE,QAASA,IAAMsE,GAAQ,OACvD,KAGR,EC3DlB2E,GAAc9J,IAAoF,IAAnF,MAAEiH,EAAQ,GAAE,WAAE8C,EAAa,GAAE,SAAEC,GAAW,EAAK,OAAEC,EAAS,WAAYhL,GAAOe,EAErG,MAAOyC,EAAOyH,IAAQC,EAAAA,EAAAA,IAASlL,GAazBmL,EAXYC,MACd,OAAQJ,GACJ,IAAK,QAIL,QACI,OAAOrF,EAHX,IAAK,WACD,OAAO8C,EAGf,EAGoB2C,GAExB,OACI3J,EAAAA,EAAAA,MAACkG,EAAO,CAAAnG,SAAA,EACJC,EAAAA,EAAAA,MAACsG,EAAK,CAAAvG,SAAA,CAAEwG,EAAO+C,IAAYzJ,EAAAA,EAAAA,KAAA,QAAMgJ,MAAO,CAAEe,MAAOnL,EAAAA,GAAOW,OAAQW,SAAC,UACjEF,EAAAA,EAAAA,KAACgK,EAAAA,GAAK,CACF5J,GAAIyJ,KACA3H,KACAxD,KAERsB,EAAAA,EAAAA,KAAC+G,EAAU,CAAA7G,SAAEsJ,KACbxJ,EAAAA,EAAAA,KAACiK,EAAAA,GAAY,CAAClH,KAAMb,EAAMa,KAAMmH,UAAWtD,MACrC,EAILuD,GAAoBpE,IAA2E,IAA1E,QAAE5D,EAAO,MAAEuE,EAAQ,GAAE,WAAE8C,EAAa,GAAE,SAAEC,GAAW,KAAU/K,GAAOqH,EAElG,MAAO7D,EAAOyH,IAAQC,EAAAA,EAAAA,IAASlL,GAE/B,OACIyB,EAAAA,EAAAA,MAACkG,EAAO,CAAAnG,SAAA,EACJC,EAAAA,EAAAA,MAACsG,EAAK,CAAAvG,SAAA,CAAEwG,EAAO+C,IAAYzJ,EAAAA,EAAAA,KAAA,QAAMgJ,MAAO,CAAEe,MAAOnL,EAAAA,GAAOW,OAAQW,SAAC,UACjEF,EAAAA,EAAAA,KAACgK,EAAAA,GAAK,CACFE,UAAWnI,KACPG,KACAxD,EACJyD,QAASA,KAEbnC,EAAAA,EAAAA,KAAC+G,EAAU,CAAA7G,SAAEsJ,KACbxJ,EAAAA,EAAAA,KAACiK,EAAAA,GAAY,CAAClH,KAAMb,EAAMa,KAAMmH,UAAWtD,MACrC,EAILwD,GAAkBpI,IAAmF,IAAlF,MAAE0E,EAAQ,GAAE,WAAE8C,EAAa,GAAE,SAAEC,GAAW,EAAK,OAAEC,EAAS,UAAWhL,GAAOsD,EAExG,MAAOE,EAAOyH,IAAQC,EAAAA,EAAAA,IAASlL,GAezBmL,EAbYC,MACd,OAAQJ,GACJ,IAAK,OAML,QACI,OAAOW,EALX,IAAK,YACD,OAAOC,GACX,IAAK,OACD,OAAOC,GAGf,EAGoBT,GAExB,OACI3J,EAAAA,EAAAA,MAACkG,EAAO,CAAAnG,SAAA,EACJC,EAAAA,EAAAA,MAACsG,EAAK,CAAAvG,SAAA,CAAEwG,EAAO+C,IAAYzJ,EAAAA,EAAAA,KAAA,QAAMgJ,MAAO,CAAEe,MAAOnL,EAAAA,GAAOW,OAAQW,SAAC,UACjEF,EAAAA,EAAAA,KAACgK,EAAAA,GAAK,CACFE,UAAWL,KACP3H,KACAxD,KAERsB,EAAAA,EAAAA,KAAC+G,EAAU,CAAA7G,SAAEsJ,KACbxJ,EAAAA,EAAAA,KAACiK,EAAAA,GAAY,CAAClH,KAAMb,EAAMa,KAAMmH,UAAWtD,MACrC,C,6DCpFlB,MAaA,EAbmBnH,IAA8D,IAA7D,SAACS,EAAQ,MAAE8I,EAAK,YAAEwB,GAAc,EAAK,MAAEC,KAAU/L,GAAMe,EACvE,OAAOO,EAAAA,EAAAA,KAAC0K,EAAAA,GAAI,CAAC1E,IAAKyE,EAAOD,YAAaA,EAAaxB,MAAOA,KAAWtK,EAAKwB,SAAGA,GAAgB,C,6DCDjG,MAoBA,EApBqBT,IAA4E,IAA3E,MAACkL,EAAK,SAAEzK,EAAQ,YAAEsK,GAAc,EAAK,KAAErL,EAAO,MAAK,MAAEsL,KAAU/L,GAAMe,EACvF,OACIU,EAAAA,EAAAA,MAACyK,EAAAA,GAAM,CAAC9K,UAAWpB,EAAMoB,UAAYpB,EAAMoB,UAAY,GAC/C0K,YAAaA,EAAarL,KAAMA,EAAM6G,IAAKyE,EAAOzB,MAAOtK,EAAMsK,MAAM9I,SAAA,EACzEF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOI,SAAEyK,IACtBzK,IACI,C,mFCAjB,MA6BA,EA7BeT,IAAwD,IAAvD,KAACsD,EAAI,SAAE7C,EAAQ,MAAE8I,EAAK,OAAE6B,GAAS,KAAUnM,GAAMe,EAC7D,MAAM,UAACqL,IAAaC,EAAAA,EAAAA,MACpB,OACI/K,EAAAA,EAAAA,KAACgL,EAAAA,GAAS,CAAC5K,GAAIC,EAAAA,EAAO+D,IACX,cAAarB,EACbxC,QAAS,CAACE,QAAS,GACnBwK,YAAa,CAACxK,QAAS,GACvBE,WAAY,CAACC,SAAU,IACvBsK,SAAU,CAACC,MAAM,GACjBnC,MAAOA,EACPlJ,UAAW+K,EAAS,SAAW,GAC/BO,IAAKN,EACLO,OAAQ3M,EAAM2M,OAAOnL,SAE3BA,GACO,C,6GCvBpB,MAAMoL,EAAKrK,IAAM,QAAS,CACtBC,MAAOA,EAAAA,GAAMqK,SACbnK,KAAMA,EAAAA,GAAKmK,WAGTC,EAAMvK,IAAM,QAAS,CACvBC,MAAOA,EAAAA,GAAMuK,OACbrK,KAAMA,EAAAA,GAAKqK,SAGTC,EAAezK,IAAM,QAAS,CAChCC,MAAOA,EAAAA,GAAM2J,OACbzJ,KAAMA,EAAAA,GAAKyJ,SAGTc,EAAQ1K,IAAM,QAAS,CACzBC,MAAOA,EAAAA,GAAMC,UACbC,KAAMA,EAAAA,GAAKD,YAGF6J,EAAY1M,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,ibACnBsN,EAAAA,GAAQC,aAGFP,EAElBnM,EAAAA,GAAKoH,KAGL7H,GAASA,EAAM2M,QAAM,WAAAxK,OAAenC,EAAM2M,OAAM,OAclCK,GAUDhN,GAAuB,QAAdA,EAAM0M,IAAgB,aAAe,cAK/B1M,GAAuB,QAAdA,EAAM0M,IAAgB,aAAe,aAG1ExJ,EAAAA,GAAYC,QAKH+I,EAAStM,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,iPAE5BI,GAAwB,WAAfA,EAAMS,KAAiB,0BAA+BA,EAAAA,GAAK2M,UAC3DpN,GAAUA,EAAM8L,YAAiC,cAAnB,mBAO7B9L,GAASA,EAAM8L,YAAc,SAAW,MAazCuB,EAAgBzN,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,4EACnCa,EAAAA,GAAKoH,IAMeoF,GAIXjB,EAAOpM,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,+EACjBI,GAAUA,EAAM8L,YAA8B,WAAhB,gBAC/B9L,GAASA,EAAMO,OAAM,eAAA4B,OAAkBnC,EAAMO,OAAM,OAAQ,QAGnEE,EAAAA,GAAKoH,KAIUjI,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,mUACdQ,EAAAA,GAAU,IAGdF,EAAAA,GAAO4C,MA6BIlD,EAAAA,GAAO0N,GAAExN,WAAA,CAAAC,YAAA,gBAATH,CAAS,mIAOTkN,GAIClN,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,gDAEXkN,E,6DC5Jf,MAAMS,EAAU3N,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,eAAVH,CAAU,qPAQ7BsD,EAAAA,GAAYC,OAEV1C,EAAAA,GAAKoH,IAGP3E,EAAAA,GAAYsK,SAeHC,GANe7N,EAAAA,GAAO8N,GAAE5N,WAAA,CAAAC,YAAA,eAATH,CAAS,+CAMdA,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,eAAVH,CAAU,qDAC7Ba,EAAAA,GAAKoH,IAIL3E,EAAAA,GAAYC,S,+ECvBhB,MAAMwK,GAAuBC,EAAAA,EAAAA,WAAAA,EAAWC,EAAAA,EAAAA,eAAcC,EAAAA,aAEhDC,EAAanO,EAAAA,GAAO8F,IAAG5F,WAAA,CAAAC,YAAA,gBAAVH,CAAU,mDA+C7B,EAzCamB,IAAqD,IAApD,QAAEiN,EAAO,SAAExM,EAAQ,GAAE+D,EAAE,QAAE0I,EAAO,WAAEC,GAAYnN,EACxD,MAAM,iBAAEoN,EAAgB,UAAEC,IAAc/B,EAAAA,EAAAA,MAClCgC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAgBhO,MAAQ,IAGnCiO,EAAOP,GAA0B,CAAEQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GASlE,OACIvN,EAAAA,EAAAA,KAAAwN,EAAAA,SAAA,CAAAtN,SAEQ+M,GACIjN,EAAAA,EAAAA,KAACyM,EAAU,CAAAvM,SAAEA,KAEbF,EAAAA,EAAAA,KAACqM,EAAoB,CAACvM,UAAU,iBAC5B4M,QAASA,EACT9K,YAAa,CAACwL,GAAI,KAAMC,GAAI,KAAMC,GAAI,IAAKC,GAAI,GAC/CJ,KAAMA,EACNM,OAAQ,CAAC,GAAI,IACbC,aAAa,EACbC,UAAyB,IAAdb,EAAkB,IAAM,IAAmB,GAAZA,EAC1Cc,YAAaf,EACbgB,WAAW,EACXC,YAAY,WACZC,kBAAkB,EAClBC,UAAU,EACVC,eAAgBtB,EAzBRD,IACpBG,IACAE,GAASmB,EAAAA,EAAAA,IAAa,CAAEjK,KAAIyI,aAC5BK,GAASoB,EAAAA,EAAAA,OACb,OAqB+D9I,EAAUnF,SACxDA,KAGd,E,4CCzCX,MA2CA,EA3CaT,IAAmB,IAAlB,SAAES,GAAUT,EACtB,MAAM2O,GAAUtJ,EAAAA,EAAAA,QAAO,MACjBuJ,EAASC,MAETC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxB/B,GAAU8B,EAAAA,EAAAA,KAAYE,GAASA,EAAc,OAAEC,SAC/CC,GAAeJ,EAAAA,EAAAA,KAAYE,GAASA,EAAc,OAAEE,eACpDhJ,EAAU8G,EAAQ6B,GAClB3B,EAAagC,EAAaL,GAehC,OAZAM,QAAQC,IAAI,oCACZD,QAAQC,IAAIP,GACZM,QAAQC,IAAIpC,GACZmC,QAAQC,IAAIlJ,IAEZmC,EAAAA,EAAAA,YAAU,KACFqG,EAAQxI,UACRwI,EAAQxI,QAAQmJ,UAAY,EAChC,GACD,CAACR,KAIAvO,EAAAA,EAAAA,KAACiM,EAAO,CAACjG,IAAKoI,EAAQlO,UAClBF,EAAAA,EAAAA,KAACmM,EAAO,CAAAjM,SACH0F,GAAU5F,EAAAA,EAAAA,KAACgP,EAAI,CAAC/K,GAAIsK,EAAW7B,QAAS9G,EAAS+G,QAAS0B,EAAOY,YAAarC,WAAYA,EAAW1M,SAAEA,IAAmBA,KAEzH,C","sources":["UI/Btn/index.jsx","styles/keyframes.js","UI/Select/style.js","UI/Select/index.jsx","components/MaskedInputs/Date/style.js","UI/Field/index.jsx","components/MaskedInputs/Date/index.jsx","UI/FormikField/style.js","components/MaskedInputs/DateRange/index.jsx","components/MaskedInputs/Time/index.jsx","UI/FormikField/index.jsx","components/Widget/WidgetBody/index.jsx","components/Widget/WidgetHeader/index.jsx","components/Widget/index.jsx","components/Widget/style.js","layout/Page/style.js","layout/Grid/index.jsx","layout/Page/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport { colors, textSizes, fonts, flex } from '@styles/vars';\nimport { darken } from 'polished';\n\n// utils\nimport { motion, AnimatePresence } from 'framer-motion';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  border-radius: 8px;\n  background-color: ${props => props.customColor ? props.customColor : colors.blue};\n  color: #fff;\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  height: ${props => props.height ? props.height : '40px'};\n  width: ${props => props.width ? props.width : '100%'};\n  display: flex;\n  ${flex.center};\n  gap: 8px;\n  line-height: 1;\n  transition: background-color var(--transition);\n  \n\n  &:hover, &:focus {\n    background-color: ${darken(0.1, colors.blue)};\n  }\n\n  &.success {\n    background-color: ${colors.success};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.success)};\n    }\n  }\n\n  &.error {\n    background-color: ${colors.error};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.error)};\n    }\n  }\n\n  &.disabled {\n    background-color: ${colors.light_gray};\n    pointer-events: none;\n  }\n`\n\nconst Btn = ({ text, handler, type = 'button', isVisible = true, className, icon, height , width, customColor }) => {\n  return (\n    <AnimatePresence>\n      {\n        isVisible && (\n          <Button as={motion.button}\n            className={className ? className : ''}\n            onClick={handler}\n            type={type}\n            initial={false}\n            height={height}\n            width={width}\n            customColor={customColor}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: .3 }}>\n            {icon && <i className={`icon icon-${icon}`} />} {text}\n          </Button>\n        )\n      }\n    </AnimatePresence>\n  )\n}\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  handler: PropTypes.func,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  isVisible: PropTypes.bool,\n  className: PropTypes.string,\n  icon: PropTypes.string\n}\n\nexport default Btn;","import {keyframes} from 'styled-components/macro';\n\nexport const pulse = keyframes`\n  from {\n    transform: scale(1);\n    transform-origin: center center;\n    animation-timing-function: linear;\n  }\n  10% {\n    transform: scale(0.91);\n    animation-timing-function: linear;\n  }\n  17% {\n    transform: scale(0.98);\n    animation-timing-function: linear;\n  }\n  33% {\n    transform: scale(0.87);\n    animation-timing-function: linear;\n  }\n  45% {\n    transform: scale(1);\n    animation-timing-function: linear;\n  }\n`\n\nexport const aura = keyframes`\n  0% {\n    opacity: 1;\n    transform: scale(0);\n  }\n  90% {\n    opacity: .3;\n  }\n  to {\n    opacity: .1;\n    transform: scale(1);\n  }\n`;\n\nexport const pen = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n  50% {\n    transform: translateX(2px);\n  }\n  100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const fadeIn = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(2px);\n  }\n    100% {\n    opacity: 1;\n    transform: translateY(0);\n    }\n`;\n\nexport const fadeOut = keyframes`\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n    100% {\n    opacity: 0;\n    transform: translateY(2rem);\n    }\n`;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {textSizes, light, dark, colors, fonts, breakpoints} from '@styles/vars';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst basicBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n    light: light.text,\n    dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n\n      &--isdisabled {\n        background-color: darken(${basicBg}, 20%); // Darken the background for disabled\n        color: ${theme('theme', {\n          light: '#666', // Optional: change text color for disabled state in light mode\n          dark: '#aaa'  // Optional: change text color for disabled state in dark mode\n        })};\n        cursor: not-allowed;\n\n        .icon {\n          color: ${theme('theme', {\n            light: '#ccc', // Optional: change icon color for disabled state in light mode\n            dark: '#444'  // Optional: change icon color for disabled state in dark mode\n          })};\n        }\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n      height: ${props => props.isMulti ? 'fit-content' : '40px'};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","// styled components\nimport { Basic, Minimal, User } from './style';\n\n// utils\nimport PropTypes from 'prop-types';\nimport { components } from 'react-select';\n\n// hooks\nimport { useEffect, useState } from 'react';\n\nconst CustomSelect = ({ label, options, variant, value, changeHandler, placeholder }) => {\n    // automatically select the first option if no placeholder is provided\n    useEffect(() => {\n        if (!placeholder && value === null) {\n            changeHandler(options[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const Control = ({ children, ...props }) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: label,\n        isSearchable: variant !== 'user',\n        options: options,\n        value: value,\n        onChange: changeHandler,\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal {...commonProps} />;\n        }\n        case 'user': {\n            return <User {...commonProps} />;\n        }\n    }\n}\n\nexport const FormikSelect = ({ form, field, options, variant, placeholder, isMulti, handler, ...props }) => {\n\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const defualtValue = () => {\n\n        const value = field.value;\n\n        if (isMulti) {\n            return options ? options.filter(option => value.includes(option.value)) : [];\n        } else {\n            return options ? options.find(option => option.value === value) : \"\";\n        }\n    }\n\n    const Control = ({ children, ...props }) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: field.name,\n        isSearchable: variant !== 'user',\n        options: options,\n        isMulti: isMulti,\n        isDisabled: props.isDisabled,\n        value: defualtValue(),\n        onChange: (option) => {\n\n            const value = isMulti ? (option ? option.map(item => item.value) : []) : (option ? option.value : \"\");\n            form.setFieldValue(field.name, value);\n\n            if (handler) {\n                handler(option);\n            }\n        },\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic isMulti={isMulti} {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal isMulti={isMulti} {...commonProps} />;\n        }\n        case 'user': {\n            return <User isMulti={isMulti} {...commonProps} />;\n        }\n    }\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.any,\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\n    value: PropTypes.any,\n    changeHandler: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default CustomSelect;","import styled from 'styled-components/macro';\nimport {colors} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const DateInputWrapper = styled.div`\n  position: relative;\n  cursor: pointer;\n  width: 100%;\n  \n  input {\n    width: 100%;\n\n    &::placeholder {\n      text-transform: uppercase;\n    }\n  }\n\n  .icon {\n    position: absolute;\n    top: 50%;\n    right: 16px;\n    transform: translateY(-50%);\n    font-size: 14px;\n    color: ${theme('theme', {\n      light: '#A2C0D4',\n      dark: colors.gray,\n    })};\n    transition: color var(--transition);\n\n    &:hover, &:focus {\n      color: ${colors.blue};\n    }\n  }\n`;","// styling\nimport styled from 'styled-components/macro';\nimport {colors, dark, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\n// utils\nimport PropTypes from 'prop-types';\n\nexport const Input = styled.input`\n  height: 40px;\n  padding: 10px 16px;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  font-size: ${textSizes['14']};\n  ${theme('theme', {\n    light: `\n    background-color: ${light.highlight};\n   `,\n    dark: `\n    background-color: ${dark.highlight};\n   `\n  })};\n  transition: border-color var(--transition), box-shadow var(--transition);\n  \n  &.error {\n    border-color: ${colors.error};\n  }\n\n  &:hover {\n    box-shadow: ${theme('theme', {\n      light: `0 0 0 2px #A2C0D4`,\n      dark: `0 0 0 2px ${colors.dark}`\n    })};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${colors.blue};\n  }\n`\n\nconst Field = ({type = 'text', placeholder, value, handler, id, className}) => {\n    return <Input type={type}\n                  placeholder={placeholder}\n                  value={value}\n                  onChange={handler}\n                  id={id}\n                  className={className || ''}\n    />\n}\n\nField.propTypes = {\n    type: PropTypes.oneOf(['text', 'password', 'email', 'number', 'search']),\n    placeholder: PropTypes.string\n}\n\nexport default Field;","// styled components\nimport { DateInputWrapper } from './style';\nimport { Input } from '@ui/Field';\n\n// components\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\n// utils\nimport { useRef, useState } from 'react';\n\nconst DateInput = ({ form, field, id, minDate, maxDate, disabled, handler, ...props }) => {\n    const [value, setValue] = useState(field.value || null);\n    const [open, setOpen] = useState(false);\n    const customInputRef = useRef(null);\n    const buttonRef = useRef(null);\n\n    const handleChange = (newValue) => {\n        setValue(newValue);\n        const newDate = newValue ? newValue.format(\"yyyy-MM-DD\") : null;\n        form.setFieldValue(field.name, newDate);\n\n        if (handler) {\n            handler(newDate);\n        }\n    };\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterMoment}>\n            <DatePicker\n                open={open}\n                value={value}\n                minDate={minDate ? new Date(minDate) : undefined}\n                maxDate={maxDate ? new Date(maxDate) : undefined}\n                onChange={handleChange}\n                disabled={disabled}\n                onClose={() => setOpen(false)}\n                PopperProps={{ anchorEl: customInputRef.current }}\n                PaperProps={{ className: 'date-picker' }}\n                renderInput={({\n                    ref,\n                    inputProps,\n                    disabled,\n                    onChange,\n                    value\n                }) => (\n                    <DateInputWrapper ref={ref}>\n                        <Input\n                            id={id}\n                            value={value && value.format(\"DD/MM/YYYY\")}\n                            onChange={onChange}\n                            disabled={disabled}\n                            ref={customInputRef}\n                            placeholder=\"DD/MM/YYYY\"\n                            {...inputProps}\n                            onClick={() => setOpen(true)}\n                        />\n                        <i className=\"icon icon-calendar\" ref={buttonRef} onClick={() => setOpen(true)} />\n                    </DateInputWrapper>\n                )}\n            />\n        </LocalizationProvider>\n    )\n}\n\nexport default DateInput;","import styled from \"styled-components\";\nimport { flex, colors, textSizes, dark, light, fonts, breakpoints } from '@styles/vars';\nimport theme from 'styled-theming';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst border = theme('theme', {\n  light: `1px solid ${colors.light_gray} !important`,\n  dark: `1px solid ${colors.dark} !important`,\n})\n\nconst basicBg = theme('theme', {\n  light: light.highlight,\n  dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n  light: light.text,\n  dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const ColumnContainer = styled.div`\n  ${flex.col};\n  gap: 10px;\n  margin-bottom: 20px;\n  \n  .field, .Select__control {\n    border: ${border};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  ${flex.col};\n`\n\nexport const Label = styled.label`\n  font-size: ${textSizes['14']};\n  width: fit-content;\n  margin-bottom: 8px;\n`\n\nexport const ErrorText = styled.span`\n    font-size: ${textSizes['14']};\n    width: fit-content;\n    margin-top: 8px;\n    color: ${colors.error};\n`;\n\nexport const HelperText = styled.span`\n    font-size: ${textSizes['10']};\n    width: fit-content;\n    margin-top: 4px;\n    color: ${colors.text.secondary};\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  padding: 10px 16px;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  font-size: ${textSizes['14']};\n  ${theme('theme', {\n  light: `\n    background-color: ${light.highlight};\n   `,\n  dark: `\n    background-color: ${dark.highlight};\n   `\n})};\n  transition: border-color var(--transition), box-shadow var(--transition);\n  \n  &.error {\n    border-color: ${colors.error};\n  }\n\n  &:hover {\n    box-shadow: ${theme('theme', {\n  light: `0 0 0 2px #A2C0D4`,\n  dark: `0 0 0 2px ${colors.dark}`\n})};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${colors.blue};\n  }\n\n  &:disabled {\n    ${theme('theme', {\n      light: `\n        background-color: darken(${light.highlight}, 30%); // Adjust the percentage as needed\n      `,\n      dark: `\n        background-color: darken(${dark.highlight}, 30%); // Adjust the percentage as needed\n      `\n    })};\n    color: ${theme('theme', {\n      light: '#666', // Optional: change text color for disabled state in light mode\n      dark: '#aaa'  // Optional: change text color for disabled state in dark mode\n    })};\n    cursor: not-allowed;\n  }\n`;\n\nexport const SimpleSelect = styled.select`\n  height: 40px;\n  padding: 10px 16px;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  font-size: ${textSizes['14']};\n  ${theme('theme', {\n    light: `\n      background-color: ${light.highlight};\n    `,\n    dark: `\n      background-color: ${dark.highlight};\n    `\n  })};\n  transition: border-color var(--transition), box-shadow var(--transition);\n  \n  &.error {\n    border-color: ${colors.error};\n  }\n\n  &:hover {\n    box-shadow: ${theme('theme', {\n      light: `0 0 0 2px #A2C0D4`,\n      dark: `0 0 0 2px ${colors.dark}`\n    })};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${colors.blue};\n  }\n\n  /* Add any custom styles specific to the select component here */\n`;\n\nexport const Textarea = styled.textarea`\n  height: 80px;  /* Double the height of your Input component */\n  padding: 10px 16px;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  font-size: ${textSizes['14']};\n  ${theme('theme', {\n    light: `\n      background-color: ${light.highlight};\n    `,\n    dark: `\n      background-color: ${dark.highlight};\n    `\n  })};\n  transition: border-color var(--transition), box-shadow var(--transition);\n  \n  &.error {\n    border-color: ${colors.error};\n  }\n\n  &:hover {\n    box-shadow: ${theme('theme', {\n      light: `0 0 0 2px #A2C0D4`,\n      dark: `0 0 0 2px ${colors.dark}`\n    })};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${colors.blue};\n  }\n  \n  resize: none;  /* Disable resizing */\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport { differenceInDays, differenceInMonths, isEqual } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { DateInputWrapper } from '../Date/style';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from '@ui/Field';\n\nconst DurationPicker = ({ field, form, id }) => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [startDate, endDate] = dateRange;\n\n  // Initialize with Formik's values if available\n  useEffect(() => {\n    if (field.value) {\n      setDateRange([field.value.startDate, field.value.endDate]);\n    }\n  }, [field.value]);\n\n  const calculateDaysOrMonths = () => {\n    let duration = '';\n    if (startDate && endDate) {\n      if (isEqual(startDate, endDate)) {\n        duration = '1 day';\n      } else {\n        const diffInDays = differenceInDays(endDate, startDate);\n        if (diffInDays > 30) {\n          const diffInMonths = differenceInMonths(endDate, startDate);\n          duration = `${diffInMonths + 1} months`; // Add 1 to account for current month\n        } else {\n          duration = `${diffInDays + 1} days`; // Add 1 to account for current day\n        }\n      }\n    }\n\n    form.setFieldValue(field.name, { startDate, endDate, duration });\n\n    // If you need to handle duration elsewhere\n    // handleDuration(duration);\n  };\n\n  return (\n      <DatePicker\n        id={id}\n        selectsRange={true}\n        startDate={startDate}\n        endDate={endDate}\n        onChange={(update) => {\n          if (Array.isArray(update) && update.every(date => date === null)) {\n            setDateRange([null, null]);\n            form.setFieldValue(field.name, null);\n          } else {\n            setDateRange(update);\n            form.setFieldValue(field.name, { startDate: update[0], endDate: update[1], duration: '' });\n          }\n        }}\n        \n        placeholderText=\"Time Duration\"\n        onCalendarClose={calculateDaysOrMonths}\n        isClearable={true}\n        customInput={<Input \n          placeholder=\"Time Duration\"\n          style={{width: '100%'}}\n          />}\n      />\n  );\n};\n\nexport default DurationPicker;","import React, { useState, useRef } from 'react';\n\nimport { DateInputWrapper } from '../Date/style';\n\n// material ui\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\n\n// ui\nimport { Input } from '@ui/Field'; // Replace with your Input component if different\n\nconst TimeInput = ({ form, field, id, disabled, handler, timeInterval = 15, ...props }) => {\n    const [value, setValue] = useState(field.value || null);\n    const [open, setOpen] = useState(false);\n    const customInputRef = useRef(null);\n    const buttonRef = useRef(null);\n\n    const handleChange = (newValue) => {\n        setValue(newValue);\n        form.setFieldValue(field.name, newValue);\n\n        if (handler) {\n            const newTime = newValue ? newValue.format(\"HH:mm\") : null;\n            handler(newTime);\n        }\n    };\n\n    const shouldDisableTime = (timeValue, clockType) => {\n        if (clockType === 'minutes') {\n            // Disable minutes not matching the specified interval\n            return timeValue % timeInterval !== 0;\n        }\n        return false;\n    };\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterMoment}>\n            <TimePicker\n                open={open}\n                value={value}\n                onChange={handleChange}\n                disabled={disabled}\n                onClose={() => setOpen(false)}\n                shouldDisableTime={shouldDisableTime}\n                PopperProps={{ anchorEl: customInputRef.current }}\n                PaperProps={{ className: 'date-picker' }}\n                renderInput={({\n                    ref,\n                    inputProps,\n                    disabled,\n                    onChange,\n                    value\n                }) => (\n                    <DateInputWrapper ref={ref}>\n                        <Input\n                            id={id}\n                            value={value && value.format(\"HH:mm\")}\n                            onChange={onChange}\n                            disabled={disabled}\n                            ref={customInputRef}\n                            placeholder=\"HH:mm\"\n                            {...inputProps}\n                            onClick={() => setOpen(true)}\n                        />\n                        {/* Replace icon with your desired icon */}\n                        <i className=\"icon icon-clock\" ref={buttonRef} onClick={() => setOpen(true)} />\n                    </DateInputWrapper>\n                )}\n            />\n        </LocalizationProvider>\n    );\n};\n\nexport default TimeInput;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { FormikSelect } from '@ui/Select';\nimport { colors } from '@styles/vars';\nimport DateInput from '@components/MaskedInputs/Date';\nimport { Field, useField, ErrorMessage } from \"formik\";\nimport { Wrapper, Label, HelperText, ErrorText, Input, Textarea } from './style';\nimport DurationPicker from '@components/MaskedInputs/DateRange';\nimport TimeInput from '@components/MaskedInputs/Time';\n\n\nexport const FormikField = ({ label = '', helperText = '', required = false, asType = 'input', ...props }) => {\n\n    const [field, meta] = useField(props);\n\n    const getAsType = () => {\n        switch (asType) {\n            case 'input':\n                return Input;\n            case 'textarea':\n                return Textarea;\n            default:\n                return Input;\n        }\n    }\n\n    const AsTypeComponent = getAsType();\n\n    return (\n        <Wrapper>\n            <Label>{label}{required && <span style={{ color: colors.error }}>*</span>}</Label>\n            <Field\n                as={AsTypeComponent}\n                {...field}\n                {...props}\n            />\n            <HelperText>{helperText}</HelperText>\n            <ErrorMessage name={field.name} component={ErrorText} />\n        </Wrapper>\n    )\n}\n\nexport const FormikSelectField = ({ options, label = '', helperText = '', required = false, ...props }) => {\n\n    const [field, meta] = useField(props);\n\n    return (\n        <Wrapper>\n            <Label>{label}{required && <span style={{ color: colors.error }}>*</span>}</Label>\n            <Field\n                component={FormikSelect}\n                {...field}\n                {...props}\n                options={options}\n            />\n            <HelperText>{helperText}</HelperText>\n            <ErrorMessage name={field.name} component={ErrorText} />\n        </Wrapper>\n    )\n}\n\nexport const FormikDateField = ({ label = '', helperText = '', required = false, asType = 'date', ...props }) => {\n\n    const [field, meta] = useField(props);\n\n    const getAsType = () => {\n        switch (asType) {\n            case 'date':\n                return DateInput;\n            case 'daterange':\n                return DurationPicker;\n            case 'time':\n                return TimeInput;\n            default:\n                return DateInput;\n        }\n    }\n\n    const AsTypeComponent = getAsType();\n\n    return (\n        <Wrapper>\n            <Label>{label}{required && <span style={{ color: colors.error }}>*</span>}</Label>\n            <Field\n                component={AsTypeComponent}\n                {...field}\n                {...props}\n            />\n            <HelperText>{helperText}</HelperText>\n            <ErrorMessage name={field.name} component={ErrorText} />\n        </Wrapper>\n    )\n}\n\nexport const FormikCustomField = ({ label = '', helperText = '', required = false, customComponent, ...props }) => {\n\n    const [field, meta] = useField(props);\n\n    return (\n        <Wrapper>\n            <Label>{label}{required && <span style={{ color: colors.error }}>*</span>}</Label>\n            <Field\n                component={customComponent}\n                {...field}\n                {...props}\n            />\n            <HelperText>{helperText}</HelperText>\n            <ErrorMessage name={field.name} component={ErrorText} />\n        </Wrapper>\n    )\n}\n\n\n\nFormikField.propTypes = {\n    label: PropTypes.string,\n    helperText: PropTypes.string,\n    required: PropTypes.bool\n}","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","// styled components\nimport {Header} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetHeader = ({title, children, sidePadding = false, flex = 'row', elRef, ...props}) => {\n    return (\n        <Header className={props.className ? props.className : ''}\n                sidePadding={sidePadding} flex={flex} ref={elRef} style={props.style}>\n            <h2 className=\"title\">{title}</h2>\n            {children}\n        </Header>\n    )\n}\n\nWidgetHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    sidePadding: PropTypes.bool,\n    flex: PropTypes.oneOf(['row', 'column'])\n}\n\nexport default WidgetHeader;","// styled components\nimport {Container} from './style';\n\n// components\nimport {motion} from 'framer-motion';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport {useInterfaceContext} from '@contexts/interfaceContext';\n\nconst Widget = ({name, children, style, shadow = false, ...props}) => {\n    const {direction} = useInterfaceContext();\n    return (\n        <Container as={motion.div}\n                   data-widget={name}\n                   initial={{opacity: 0}}\n                   whileInView={{opacity: 1}}\n                   transition={{duration: .4}}\n                   viewport={{once: true}}\n                   style={style}\n                   className={shadow ? 'shadow' : ''}\n                   dir={direction}\n                   mobile={props.mobile}\n        >\n            {children}\n        </Container>\n    )\n}\n\nWidget.propTypes = {\n    name: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    style: PropTypes.object,\n    shadow: PropTypes.bool\n}\n\nexport default Widget;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {flex, light, dark, colors, textSizes, effects, breakpoints} from '@styles/vars';\n\nconst bg = theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n})\n\nconst bar = theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n})\n\nconst borderShadow = theme('theme', {\n    light: light.shadow,\n    dark: dark.shadow\n})\n\nconst navBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n})\n\nexport const Container = styled.div`\n  box-shadow: ${effects.widgetShadow};\n  border-radius: 10px;\n  position: relative;\n  background-color: ${bg};\n  overflow: hidden;\n  ${flex.col};\n  min-height: 182px;\n  flex-grow: 1;\n  ${props => props.mobile && `height: ${props.mobile}px`};\n  // iOS fix\n  transform: translate3d(0, 0, 0);\n  \n  &.shadow {\n    &:before, &:after {\n      display: block;\n    }\n  }\n\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    background: ${borderShadow};\n    height: 100%;\n    width: 24px;\n    z-index: 3;\n    filter: blur(1px);\n    display: none;\n  }\n\n  &:before {\n    left: -2px;\n    transform: ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\n  }\n\n  &:after {\n    right: -2px;\n    transform: rotate(180deg) ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\n  }\n  \n  ${breakpoints.tablet} {\n    height: 100%;\n  }\n`\n\nexport const Header = styled.div`\n  display: flex;\n  ${props => props.flex === 'column' ? `flex-direction: column;` : flex.between};\n  padding: ${props => !props.sidePadding ? '24px 24px 20px' : '24px 0 20px'};\n  flex-wrap: wrap;\n  gap: 20px 10px;\n  position: relative;\n  z-index: 10;\n\n  .title {\n    margin: ${props => props.sidePadding ? '0 24px' : '0'};\n    flex-shrink: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  \n  &.nav .title {\n    max-width: calc(100% - 100px);\n    display: block;\n  }\n`\n\nexport const HeaderWrapper = styled.div`\n  ${flex.col};\n  width: 100%;\n  margin: 0 20px;\n  gap: 20px;\n\n  .navigator {\n    background-color: ${navBg};\n  }\n`\n\nexport const Body = styled.div`\n  padding: ${props => !props.sidePadding ? '0 24px 24px' : '0 0 24px'};\n  height: ${props => props.height ? `calc(100% - ${props.height}px)` : '100%'};\n  overflow-y: auto;\n  overflow-x: hidden;\n  ${flex.col};\n  flex-grow: 1;\n`\n\nexport const Nav = styled.div`\n  font-size: ${textSizes['14']};\n  display: flex;\n  align-items: center;\n  color: ${colors.gray};\n  margin-right: -9px;\n\n  button {\n    opacity: 0.5;\n    transition: opacity var(--transition);\n    padding: 0 9px;\n\n    &:hover, &:focus {\n      opacity: 1;\n    }\n    \n    &.disabled {\n      visibility: hidden;\n      pointer-events: none;\n    }\n  }\n\n  span {\n    font-weight: 500;\n    // truncate text. max width is 100px\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n`\n\nexport const Navbar = styled.ul`\n  margin: 0 2px;\n  border-radius: 8px;\n  height: 40px;\n  padding-left: 22px;\n  display: flex;\n  align-items: center;\n  background-color: ${bar};\n  flex-grow: 1;\n`\n\nexport const Divider = styled.div`\n  height: 2px;\n  background-color: ${bar};\n  width: 100%;\n`","import styled from 'styled-components/macro';\nimport {breakpoints, flex} from '@styles/vars';\n\nexport const Content = styled.div`\n  padding: 20px 20px 84px;\n  flex-grow: 1;\n  height: auto;\n  width: 100%;\n  display: flex;\n  margin-top: var(--header-height);\n\n  ${breakpoints.tablet} {\n    padding: 20px 30px 30px;\n    ${flex.col};\n  }\n\n  ${breakpoints.laptopL} {\n    padding: 0;\n    margin-top: 0;\n  }\n\n  @media screen and (min-width: 1280px) and (min-height: 800px) {\n    overflow: hidden;\n  }\n`\nexport const ContentTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  gap: 18px;\n`\n\nexport const Widgets = styled.div`\n  ${flex.col};\n  width: 100%;\n  flex-grow: 1;\n  \n  ${breakpoints.tablet} {\n    margin: 20px 0px;\n  }\n`","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport { withSize } from 'react-sizeme';\n\n// hooks\nimport { useInterfaceContext } from '@contexts/interfaceContext';\nimport { useDispatch } from 'react-redux';\nimport { updateLayout, saveToLocalStorage } from '@store/slices/layout';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst ResponsiveGridLayout = withSize()(WidthProvider(Responsive));\n\nconst StaticGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap : 24px;\n`;\n\nconst Grid = ({ layouts, children, id, desktop, customCols }) => {\n    const { isLayoutEditable, fontScale } = useInterfaceContext();\n    const dispatch = useDispatch();\n    const isMobile = useWindowSize().width < 768;\n\n    // use custom cols if provided else use default cols\n    const cols = customCols ? customCols : { xl: 3, lg: 3, md: 2, sm: 1 };\n\n    const handleLayoutChange = (layouts) => {\n        if (isLayoutEditable) {\n            dispatch(updateLayout({ id, layouts }));\n            dispatch(saveToLocalStorage());\n        }\n    }\n\n    return (\n        <>\n            {\n                isMobile ?\n                    <StaticGrid>{children}</StaticGrid>\n                    :\n                    <ResponsiveGridLayout className=\"content_layout\"\n                        layouts={layouts}\n                        breakpoints={{xl: 1026, lg: 1039, md: 708, sm: 0}}\n                        cols={cols}\n                        margin={[24, 24]}\n                        isResizable={false}\n                        rowHeight={fontScale === 1 ? 182 : 182 + (fontScale * 11)}\n                        isDraggable={isLayoutEditable}\n                        isBounded={true}\n                        compactType=\"vertical\"\n                        useCSSTransforms={false}\n                        autoSize={true}\n                        onLayoutChange={desktop ? handleLayoutChange : undefined}>\n                        {children}\n                    </ResponsiveGridLayout>\n            }\n        </>\n    )\n}\n\nexport default Grid;","// styled components\nimport { Content, Widgets } from './style';\nimport Grid from '@layout/Grid';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useMobileDetect from 'use-mobile-detect-hook';\n// import { useLocation } from 'react-router-dom';\n\nimport { useRef, useEffect } from 'react';\n\n// redux\nimport { useSelector } from 'react-redux';\nimport { selectSideBarIndex } from '@store/slices/sideBarSlice';\n\nconst Page = ({ children }) => {\n    const pageRef = useRef(null);\n    const device = useMobileDetect();\n\n    const layoutKey = useSelector(selectSideBarIndex);\n    const layouts = useSelector(state => state['layout'].layout);\n    const columnLayout = useSelector(state => state['layout'].columnLayout);\n    const current = layouts[layoutKey];\n    const customCols = columnLayout[layoutKey];\n\n\n    console.log('+++++++++++++ Page +++++++++++++')\n    console.log(layoutKey)\n    console.log(layouts)\n    console.log(current)\n\n    useEffect(() => {\n        if (pageRef.current) {\n            pageRef.current.scrollTop = 0;\n        }\n    }, [layoutKey]);\n\n    \n    return (\n        <Content ref={pageRef}>\n            <Widgets>\n                {current ? <Grid id={layoutKey} layouts={current} desktop={device.isDesktop()} customCols={customCols}>{children}</Grid> : children}\n            </Widgets>\n        </Content>\n    )\n}\n\nPage.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    hasBadge: PropTypes.bool,\n    hasTitle: PropTypes.bool,\n    qty: PropTypes.number,\n}\n\nexport default Page;"],"names":["Button","styled","button","withConfig","componentId","props","customColor","colors","blue","textSizes","fonts","accent","height","width","flex","center","darken","success","error","light_gray","_ref","text","handler","type","isVisible","className","icon","_jsx","AnimatePresence","children","_jsxs","as","motion","onClick","initial","animate","opacity","exit","transition","duration","concat","keyframes","fadeIn","basicBg","theme","light","highlight","dark","basicColor","NormalizedSelect","Select","gray","Basic","isMulti","Minimal","breakpoints","tablet","User","FormikSelect","_ref3","form","field","options","variant","placeholder","uniqueId","useState","Math","random","toFixed","slice","commonProps","classNamePrefix","inputId","name","isSearchable","isDisabled","value","defualtValue","filter","option","includes","find","onChange","map","item","setFieldValue","openMenuOnFocus","components","Control","_ref4","Menu","id","blurInputOnSelect","DateInputWrapper","div","Input","input","minDate","maxDate","disabled","setValue","open","setOpen","customInputRef","useRef","buttonRef","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","Date","undefined","newValue","newDate","format","onClose","PopperProps","anchorEl","current","PaperProps","renderInput","_ref2","ref","inputProps","border","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","col","_templateObject3","Label","label","_templateObject4","ErrorText","span","_templateObject5","HelperText","_templateObject6","secondary","_templateObject7","Textarea","select","_templateObject8","textarea","_templateObject9","_templateObject10","_templateObject11","_templateObject12","dateRange","setDateRange","startDate","endDate","useEffect","selectsRange","update","Array","isArray","every","date","placeholderText","onCalendarClose","calculateDaysOrMonths","isEqual","diffInDays","differenceInDays","diffInMonths","differenceInMonths","isClearable","customInput","style","timeInterval","TimePicker","newTime","shouldDisableTime","timeValue","clockType","FormikField","helperText","required","asType","meta","useField","AsTypeComponent","getAsType","color","Field","ErrorMessage","component","FormikSelectField","FormikDateField","DateInput","DurationPicker","TimeInput","sidePadding","elRef","Body","title","Header","shadow","direction","useInterfaceContext","Container","whileInView","viewport","once","dir","mobile","bg","widgetBg","bar","bodyBg","borderShadow","navBg","effects","widgetShadow","between","HeaderWrapper","ul","Content","laptopL","Widgets","h1","ResponsiveGridLayout","withSize","WidthProvider","Responsive","StaticGrid","layouts","desktop","customCols","isLayoutEditable","fontScale","dispatch","useDispatch","isMobile","useWindowSize","cols","xl","lg","md","sm","_Fragment","margin","isResizable","rowHeight","isDraggable","isBounded","compactType","useCSSTransforms","autoSize","onLayoutChange","updateLayout","saveToLocalStorage","pageRef","device","useMobileDetect","layoutKey","useSelector","selectSideBarIndex","state","layout","columnLayout","console","log","scrollTop","Grid","isDesktop"],"sourceRoot":""}