{"version":3,"file":"static/js/15.2e713238.chunk.js","mappings":"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","sources":["UI/Btn/index.jsx","layout/Page/style.js","layout/Grid/index.jsx","layout/Page/index.jsx","pages/Public/PageNotFound.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport { colors, textSizes, fonts, flex } from '@styles/vars';\nimport { darken } from 'polished';\n\n// utils\nimport { motion, AnimatePresence } from 'framer-motion';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  border-radius: 8px;\n  background-color: ${props => props.customColor ? props.customColor : colors.blue};\n  color: #fff;\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  height: ${props => props.height ? props.height : '40px'};\n  width: ${props => props.width ? props.width : '100%'};\n  display: flex;\n  ${flex.center};\n  gap: 8px;\n  line-height: 1;\n  transition: background-color var(--transition);\n  \n\n  &:hover, &:focus {\n    background-color: ${darken(0.1, colors.blue)};\n  }\n\n  &.success {\n    background-color: ${colors.success};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.success)};\n    }\n  }\n\n  &.error {\n    background-color: ${colors.error};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.error)};\n    }\n  }\n\n  &.disabled {\n    background-color: ${colors.light_gray};\n    pointer-events: none;\n  }\n`\n\nconst Btn = ({ text, handler, type = 'button', isVisible = true, className, icon, height , width, customColor }) => {\n  return (\n    <AnimatePresence>\n      {\n        isVisible && (\n          <Button as={motion.button}\n            className={className ? className : ''}\n            onClick={handler}\n            type={type}\n            initial={false}\n            height={height}\n            width={width}\n            customColor={customColor}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: .3 }}>\n            {icon && <i className={`icon icon-${icon}`} />} {text}\n          </Button>\n        )\n      }\n    </AnimatePresence>\n  )\n}\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  handler: PropTypes.func,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  isVisible: PropTypes.bool,\n  className: PropTypes.string,\n  icon: PropTypes.string\n}\n\nexport default Btn;","import styled from 'styled-components/macro';\nimport {breakpoints, flex} from '@styles/vars';\n\nexport const Content = styled.div`\n  padding: 20px 20px 84px;\n  flex-grow: 1;\n  height: auto;\n  width: 100%;\n  display: flex;\n  margin-top: var(--header-height);\n\n  ${breakpoints.tablet} {\n    padding: 20px 30px 30px;\n    ${flex.col};\n  }\n\n  ${breakpoints.laptopL} {\n    padding: 0;\n    margin-top: 0;\n  }\n\n  @media screen and (min-width: 1280px) and (min-height: 800px) {\n    overflow: hidden;\n  }\n`\nexport const ContentTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  gap: 18px;\n`\n\nexport const Widgets = styled.div`\n  ${flex.col};\n  width: 100%;\n  flex-grow: 1;\n  \n  ${breakpoints.tablet} {\n    margin: 20px 0px;\n  }\n`","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport { withSize } from 'react-sizeme';\n\n// hooks\nimport { useInterfaceContext } from '@contexts/interfaceContext';\nimport { useDispatch } from 'react-redux';\nimport { updateLayout, saveToLocalStorage } from '@store/slices/layout';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst ResponsiveGridLayout = withSize()(WidthProvider(Responsive));\n\nconst StaticGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap : 24px;\n`;\n\nconst Grid = ({ layouts, children, id, desktop, customCols }) => {\n    const { isLayoutEditable, fontScale } = useInterfaceContext();\n    const dispatch = useDispatch();\n    const isMobile = useWindowSize().width < 768;\n\n    // use custom cols if provided else use default cols\n    const cols = customCols ? customCols : { xl: 3, lg: 3, md: 2, sm: 1 };\n\n    const handleLayoutChange = (layouts) => {\n        if (isLayoutEditable) {\n            dispatch(updateLayout({ id, layouts }));\n            dispatch(saveToLocalStorage());\n        }\n    }\n\n    return (\n        <>\n            {\n                isMobile ?\n                    <StaticGrid>{children}</StaticGrid>\n                    :\n                    <ResponsiveGridLayout className=\"content_layout\"\n                        layouts={layouts}\n                        breakpoints={{xl: 1026, lg: 1039, md: 708, sm: 0}}\n                        cols={cols}\n                        margin={[24, 24]}\n                        isResizable={false}\n                        rowHeight={fontScale === 1 ? 182 : 182 + (fontScale * 11)}\n                        isDraggable={isLayoutEditable}\n                        isBounded={true}\n                        compactType=\"vertical\"\n                        useCSSTransforms={false}\n                        autoSize={true}\n                        onLayoutChange={desktop ? handleLayoutChange : undefined}>\n                        {children}\n                    </ResponsiveGridLayout>\n            }\n        </>\n    )\n}\n\nexport default Grid;","// styled components\nimport { Content, Widgets } from './style';\nimport Grid from '@layout/Grid';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useMobileDetect from 'use-mobile-detect-hook';\n// import { useLocation } from 'react-router-dom';\n\nimport { useRef, useEffect } from 'react';\n\n// redux\nimport { useSelector } from 'react-redux';\nimport { selectSideBarIndex } from '@store/slices/sideBarSlice';\n\nconst Page = ({ children }) => {\n    const pageRef = useRef(null);\n    const device = useMobileDetect();\n\n    const layoutKey = useSelector(selectSideBarIndex);\n    const layouts = useSelector(state => state['layout'].layout);\n    const columnLayout = useSelector(state => state['layout'].columnLayout);\n    const current = layouts[layoutKey];\n    const customCols = columnLayout[layoutKey];\n\n\n    console.log('+++++++++++++ Page +++++++++++++')\n    console.log(layoutKey)\n    console.log(layouts)\n    console.log(current)\n\n    useEffect(() => {\n        if (pageRef.current) {\n            pageRef.current.scrollTop = 0;\n        }\n    }, [layoutKey]);\n\n    \n    return (\n        <Content ref={pageRef}>\n            <Widgets>\n                {current ? <Grid id={layoutKey} layouts={current} desktop={device.isDesktop()} customCols={customCols}>{children}</Grid> : children}\n            </Widgets>\n        </Content>\n    )\n}\n\nPage.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    hasBadge: PropTypes.bool,\n    hasTitle: PropTypes.bool,\n    qty: PropTypes.number,\n}\n\nexport default Page;","// styling\nimport styled from 'styled-components/macro';\nimport { flex } from '@styles/vars';\n\n// components\nimport Page from '@layout/Page';\nimport Lottie from 'lottie-react';\nimport Btn from '@ui/Btn';\nimport { motion } from 'framer-motion';\n\n// hooks\nimport { useNavigate } from 'react-router-dom';\n\n// assets\nimport notFound from '@assets/404.json';\n\nconst FlexContainer = styled.div`\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  ${flex.col};\n  width: 100%;\n`;\n\nconst Animation = styled.div`\n  max-height: 400px;\n  display: flex;\n  margin: 0 auto;\n`;\n\nconst Content = styled.div`\n  ${flex.col};\n  gap: 24px;\n  align-items: center;\n  text-align: center;\n\n  button {\n    max-width: 240px;\n  }\n`;\n\nconst PageNotFound = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Page title=\"Page not found\" >\n        <FlexContainer as={motion.div} i\n          nitial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: .4 }}\n          viewport={{ once: true }}>\n          <Animation>\n            <Lottie className=\"lottie\" animationData={notFound} />\n          </Animation>\n          <Content>\n            <h2>Page you're looking for doesn't exist</h2>\n            <Btn text=\"Return\" handler={() => navigate(-1)} />\n          </Content>\n        </FlexContainer>\n    </Page>\n  );\n}\n\nexport default PageNotFound;"],"names":["Button","styled","button","withConfig","componentId","props","customColor","colors","blue","textSizes","fonts","accent","height","width","flex","center","darken","success","error","light_gray","_ref","text","handler","type","isVisible","className","icon","_jsx","AnimatePresence","children","_jsxs","as","motion","onClick","initial","animate","opacity","exit","transition","duration","concat","Content","div","breakpoints","tablet","col","laptopL","Widgets","h1","ResponsiveGridLayout","withSize","WidthProvider","Responsive","StaticGrid","layouts","id","desktop","customCols","isLayoutEditable","fontScale","useInterfaceContext","dispatch","useDispatch","isMobile","useWindowSize","cols","xl","lg","md","sm","_Fragment","margin","isResizable","rowHeight","isDraggable","isBounded","compactType","useCSSTransforms","autoSize","onLayoutChange","updateLayout","saveToLocalStorage","undefined","pageRef","useRef","device","useMobileDetect","layoutKey","useSelector","selectSideBarIndex","state","layout","columnLayout","current","console","log","useEffect","scrollTop","ref","Grid","isDesktop","FlexContainer","Animation","PageNotFound","navigate","useNavigate","Page","title","i","nitial","whileInView","viewport","once","Lottie","animationData","notFound","Btn"],"sourceRoot":""}